import toast from 'react-hot-toast';

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π
import { createAsyncThunk } from '@reduxjs/toolkit';

// –µ–∫–∑–µ–º–ø–ª—è—Ä 'axios' –∑ –±–∞–∑–æ–≤–∏–º URL –¥–ª—è API –∑–∞–ø–∏—Ç—ñ–≤
import { goitApi } from '../auth/operations';

// –û–ø–µ—Ä–∞—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
export const fetchContactsThunk = createAsyncThunk(
  'contacts/fetchAllContacts', // –Ü–º'—è –æ–ø–µ—Ä–∞—Ü—ñ—ó
  async (_, thunkAPI) => {
    try {
      // –í–∏–∫–æ–Ω—É—î–º–æ GET-–∑–∞–ø–∏—Ç –¥–æ API
      const response = await goitApi.get('/contacts');
      return response.data; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ
      // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏
    } catch (error) {
      return thunkAPI.rejectWithValue(error.message);
    }
  }
);

// –û–ø–µ—Ä–∞—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É
export const deleteContactThunk = createAsyncThunk(
  'contacts/deleteContact', // –Ü–º'—è –æ–ø–µ—Ä–∞—Ü—ñ—ó
  // id - —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç—É, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏
  async (id, thunkAPI) => {
    try {
      // –í–∏–∫–æ–Ω—É—î–º–æ DELETE-–∑–∞–ø–∏—Ç –¥–æ API
      const response = await goitApi.delete(`/contacts/${id}`);
      toast.success('Contact successfully deleted! üëè !', {
        duration: 5000, // 5 —Å–µ–∫ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        style: { background: 'red', color: 'white' }, // –ö–∞—Å—Ç–æ–º–Ω–∏–π —Å—Ç–∏–ª—å
      });
      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
      return response.data;
      // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏
    } catch (error) {
      toast.error('Failed to delete contact ü§∑‚Äç‚ôÇÔ∏è, Try again...');
      return thunkAPI.rejectWithValue(error.message);
    }
  }
);

// –û–ø–µ—Ä–∞—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É
export const addContactThunk = createAsyncThunk(
  'contacts/addNewContact', // –Ü–º'—è –æ–ø–µ—Ä–∞—Ü—ñ—ó
  // body - –¥–∞–Ω—ñ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É
  async (body, thunkAPI) => {
    try {
      // –í–∏–∫–æ–Ω—É—î–º–æ POST-–∑–∞–ø–∏—Ç –¥–æ API
      const response = await goitApi.post('/contacts', body);
      toast.success('Contact successfully added! üëè', {
        duration: 5000,
        style: { background: 'green', color: 'white' }, // –ö–∞—Å—Ç–æ–º–Ω–∏–π —Å—Ç–∏–ª—å
      });
      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
      return response.data;
      // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏
    } catch (error) {
      toast.error('Failed to add contact ü§∑‚Äç‚ôÇÔ∏è, Try again...');
      return thunkAPI.rejectWithValue(error.message);
    }
  }
);
